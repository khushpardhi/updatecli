name: Update AMI

on:
  workflow_dispatch:

jobs:
  update-ami:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-2
      AWS_DEFAULT_REGION: ap-southeast-2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Generate Dynamic Branch Name
        id: branch
        run: |
          BRANCH_NAME="updatecli-ami-$(date +'%Y%m%d-%H%M%S')"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Create and switch to dynamic branch
        run: |
          git fetch origin
          git checkout -B ${{ steps.branch.outputs.branch_name }} origin/main

      - name: Update input.json (example)
        run: |
          sed -i 's/firstName": "[^"]*/firstName": "ami-000ed49a7fd8766b1/' fetch_latest_aws_ami/input.json

      - name: Commit and push changes
        id: check_changes
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "No changes detected."
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            COMMIT_MESSAGE="Update AMI configuration - $(date +'%Y-%m-%d %H:%M:%S')"
            git commit -m "$COMMIT_MESSAGE"
            git push origin ${{ steps.branch.outputs.branch_name }}
            echo "changes=true" >> $GITHUB_OUTPUT

      - name: Install GitHub CLI
        if: steps.check_changes.outputs.changes == 'true'
        uses: cli/cli-action@v2

      - name: Create Pull Request using GitHub CLI
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          echo "${{ secrets.AMI_GITHUB }}" | gh auth login --with-token
          gh pr create \
            --title "Update AMI" \
            --body "Automatically updated AMI via UpdateCLI workflow" \
            --base main \
            --head ${{ steps.branch.outputs.branch_name }} \
            --repo ${{ github.repository }}
